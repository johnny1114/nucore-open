<%
@domain = if ENV["RAILS_ENV"] == "production"
  "nucore.northwestern.edu"
else
  "nucore-staging.northwestern.edu"
end
%>
name: NUCoreNU_<%= ENV["RAILS_ENV"] %>

config:
  logger: /home/nucore/<%= @domain %>/current/log/eye.log

application:
  working_dir: /home/nucore/<%= @domain %>/current

notifications:
  - name: crash
    type: ses
    level: error
    contact: sysadmins@tablexi.com
    config:
      access_key_id: Your+AWS+Access+Key+ID
      secret_access_key: Your+AWS+Secret+Access+Key
      from: noreply+nucore@tablexi.com

processes:
  # only run on 1 instance
  - name: auto_cancel
    config:
      start_command: bundle exec ruby lib/daemons/auto_cancel.rb start -- --no-monitor
      stop_command: bundle exec ruby lib/daemons/auto_cancel.rb stop
      stdall: log/auto_cancel.log
      pid_file: tmp/pids/auto_cancel.pid
      daemon: true
      smart_pid: true
      notify:
        crash: error

  - name: delayed_job
    config:
      start_command: ./script/delayed_job start
      stop_command: ./script/delayed_job stop
      stdall: log/delayed_job.log
      pid_file: tmp/pids/delayed_job.pid
      start_timeout: 40 seconds
      start_grace: 30 seconds
      stop_timeout: 40 seconds
      stop_grace: 30 seconds
      notify:
        crash: error

  - name: unicorn
    config:
      pid_file: tmp/pids/unicorn.pid
      start_command: bundle exec unicorn -c config/unicorn/<%= ENV["RAILS_ENV"] %>.rb -D
      restart_command: "kill -USR2 {PID}"
      user_commands:
        rotate: "kill -USR1 {PID}"
      start_timeout: 40 seconds
      start_grace: 30 seconds
      restart_timeout: 40 seconds
      restart_grace: 30 seconds
      stdout: log/unicorn.stdout.log
      stderr: log/unicorn.stderr.log
      monitor_children:
        stop_command: "kill -QUIT {PID}"
      notify:
        crash: error
