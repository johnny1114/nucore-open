= content_for :h1 do
  =h current_facility

= content_for :sidebar do
  = render :partial => 'admin/shared/sidenav_billing', :locals => { :sidenav_tab => 'send_statements' }

%h2 Create Statements
- if @acct2ods.empty?
  %p.notice There are no completed orders that require statements.
- else
  %p
    Please review the following Credit Card and Purchase Order payment sources. A statement will be generated for each of the 
    payment sources and an email with a link to the statement will be sent.
  = form_tag(email_facility_statements_path, :method => :post) do
    %table
      %tr.borderless
        %td{:colspan => 4}= link_to 'Select None', 'JavaScript:void(0);', :class => 'select_all'
        %td.currency{:colspan => 2}= submit_tag "Send Statements"
      %tr
        %th
        %th Payment Source
        %th Owner
        %th Notify
        %th.currency # of Orders*
        %th.currency Balance*
      -@acct2ods.each do |acct,ods|
        %tr
          %td.centered= check_box_tag "account_ids[]", acct.id, true, {:class => 'toggle'}
          %td=link_to(acct, facility_account_statement_path(current_facility, acct, 'recent'))
          %td=h acct.owner_user.full_name
          %td
            %ul
              - acct.notify_users.each do |u|
                %li=h u.email
          %td.currency=h ods.count
          %td.currency=h number_to_currency ods.collect{ |d| d.total }.inject{|sum, t| sum + t}
      %tr.borderless
        %td{:colspan => 4}= link_to 'Select None', 'JavaScript:void(0);', :class => 'select_all'
        %td.currency{:colspan => 2}= submit_tag "Send Statements"
    %p.footnote * Reflects only orders that have been reviewed but have not yet been added to a statement.
