- content_for :h1 do
  =h current_facility

- content_for :sidebar do
  = render :partial => 'admin/shared/sidenav_billing', :locals => { :sidenav_tab => 'journals' }

%h2 Manage Journals
%h3 Pending Journal
- if @pending_journal.nil?
  %p.notice There is no pending journal at this time
- else
  %p
    You should only update this journal after receiving confirmation of a successful or failed journal from
    NU Financials.  If the journal was processed successfully without any changes, you may choose "Succeeded, no errors".
    This will mark all orders included in the journal as reconciled and you will be unable to make any further changes to them.
  %p
    If the journal succeeded, but if pricing or payment source changes were necessary to one or more orders
    or if one more more orders were removed from the journal for the journal to succeed, choose "Succeeded, with errors".
    This will mark the journal as successfully, but you will need to reconcile the orders individually.
  %p
    If the journal failed, you may choose "Failed".  This will allow you to include all orders in a new journal.

  - form_for([current_facility, @pending_journal]) do |f|
    = f.error_messages 
    %table
      %tr
        %th Download
        %th Journaled On
        %th Amount
        %th
          %span.require Reference
        %th Notes
        %th
          %span.require Status
      %tr
        %td
          %ul
            %li=link_to 'XLS File', @pending_journal.file.url
            %li=link_to 'XML File', facility_journal_path(current_facility, @pending_journal, :format => 'xml')
        %td=h human_datetime(@pending_journal.created_at)
        %td=h number_to_currency(@pending_journal.amount)
        %td= f.text_field :reference
        %td= f.text_field :description
        %td
          = select_tag :journal_status, options_for_select([[' ', nil], ['Succeeded, no errors', 'succeeded'], ['Succeeded, with errors', 'succeeded_errors'], ['Failed', 'failed']])
          = submit_tag 'Close Journal', :confirm => 'You are about to close this journal. Please ensure you have selected the correct status.'
%p
%hr
%p
%h3 Create Journal
- if @order_details.empty?
  %p.notice There are no orders to be journaled at this time
- else
  %p Select the orders that you wish to journal.  Only one journal may be pending at a time.  Please note that selected orders may not span multiple fiscal years.
  - disable = false
  - unless @pending_journal.nil?
    -disable = true
    %p.notice You may not generate a new journal until the pending journal is closed.
  - form_for(:journal, @journal, :path => facility_journals_path) do |f|
    = f.error_messages
    %table
      %tr.borderless
        %td{:colspan => 4}= disable ? '' : link_to('Select None', 'JavaScript:void(0);', :class => 'select_all')
        %td.currency{:colspan => 2}= submit_tag "Create Journal", {:disabled => disable}
      %tr
        %th
        %th Order
        %th Fulfilled On
        %th Account
        %th Owner
        %th.currency Total
      - @order_details.each do |od|
        - account = od.account
        %tr{:class => needs_reconcile_warning?(od) ? 'reconcile-warning' : ''}
          %td= check_box_tag "order_detail_ids[]", od.id, (action_name == 'create' && !@update_order_details.collect{|uod| uod.id}.include?(od.id) ? false : true), {:disabled => disable, :class => 'toggle'}
          %td
            %ul
              %li== #{link_to "##{od}", edit_facility_order_order_detail_path(current_facility, od.order_id, od)}: #{od.product}
              - unless od.note.blank?
                %li
                  %i= od.note
          %td= human_date od.fulfilled_at
          %td= link_to account, facility_account_statement_path(current_facility, account, 'recent')
          %td=h account.owner_user.full_name
          %td.currency=h number_to_currency od.total
      %tr.borderless
        %td{:colspan => 4}
        %td.currency{:colspan => 2}= submit_tag "Create Journal", {:disabled => disable}

= render :partial => 'shared/reconcile_footnote'
