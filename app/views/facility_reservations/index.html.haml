- content_for :head_content do
  = javascript_include_tag 'pick_accessories'

= content_for :h1 do
  =h current_facility

= content_for :tabnav do
  = render :partial => 'admin/shared/tabnav_reservation'

- if @order_details.empty?
  %p.notice There are no "New" or "In Process" Reservations.
- else
  = form_tag(batch_update_facility_reservations_path, :method => :post) do
    - facility_users = User.find_users_by_facility(current_facility)
    %table.reservations
      -## THE HEADER CONTROL ROW
      %tr.borderless
        %td{ :colspan => 8 }= link_to 'Select All', 'JavaScript:void(0);', :class => 'select_all'
        %td
          - if facility_users.empty?
            = select_tag :assigned_user_id, options_for_select([['Assign to...', nil], ['Unassign', 'unassign']]), :class => 'sync_select', :id => nil
          - else
            = select_tag :assigned_user_id, options_for_select(facility_users.map{ |u| [u.full_name, u.id] }.unshift(['Assign to...', nil], ['Unassign', 'unassign'])), :class => 'sync_select', :id => nil
        %td
          %select{ :name => "order_status_id", :class => 'sync_select', :id => nil }
            = options_for_select([['Status...', nil]])
            - OrderStatus.non_protected_statuses(current_facility).each do |os|
              = options_for_select([[os.name_with_level, os.id]])
        %td
          = submit_tag "Update Reservations"
      -## THE HEADER ROW
      %tr
        %th
        %th Order #
        %th= sortable 'reserved_by'
        %th{:colspan => 2}= sortable 'date', 'Reserved On'
        %th{:colspan => 2}= sortable "reserve_range", 'Reserved For'
        %th= sortable 'product_name', 'Product'
        %th= sortable 'assigned_to', 'Assigned To'
        %th= sortable 'status', 'Status'
        %th.currency Price
      -## THE DETAIL ROWS
      - @order_details.each do |od|
        - order = od.order
        - res = od.reservation
        - is_current = res.can_switch_instrument?
        %tr{:class => ('current' if is_current)}
          %td.centered= check_box_tag("order_detail_ids[]", od.id, false, {:class => 'toggle', :id => nil })
          %td.centered= link_to od, edit_facility_order_order_detail_path(current_facility, order, od)
          %td= order.user.full_name
          %td{:colspan => 2}
            = human_datetime(order.ordered_at)
          %td{:colspan => 2}
            - if res.can_edit?
              = link_to res, edit_facility_order_order_detail_reservation_path(current_facility, order, od, res)
            - else
              = link_to res, facility_order_order_detail_reservation_path(current_facility, order, od, res)
            - if is_current
              %br
              %span.very_dense
                = link_to t('reservations.switch.start'), order_order_detail_reservation_switch_instrument_path(od.order, od, od.reservation, :switch => 'on') if od.reservation.can_switch_instrument_on?
                = link_to t('reservations.switch.end'), order_order_detail_reservation_switch_instrument_path(od.order, od, od.reservation, :switch => 'off'), :class => end_reservation_class(od.reservation) if od.reservation.can_switch_instrument_off?
          %td
            %ul
              - product_name = (od.bundle ? "#{h od.bundle} &mdash; ".html_safe : '') + h(od.product)
              %li= product_name
              - if od.survey_completed?
                - receiver = od.external_service_receiver
                %li.indented= link_to 'View Order Form', receiver.response_data, :target => '_blank'
              - if !od.stored_files.template_result.empty?
                - od.stored_files.template_result.each do |stored_file|
                  %li.indented= link_to 'View Order File', stored_file.file.url
              - unless od.note.blank?
                %li
                  %i=h "Note: #{od.note}"
          %td=h od.assigned_user.nil? ? '' : od.assigned_user.full_name
          %td
            = od.order_status.name
          - if od.cost_estimated?
            %td.estimated_cost.currency= show_estimated_total(od)
          - elsif od.price_policy.nil?
            %td.currency Unassigned
          - else
            %td.actual_cost.currency= show_actual_total(od)
      -## THE FOOTER CONTROL ROW
      %tr.borderless
        %td
        %td
        %td
        %td
        %td
        %td
        %td
        %td
        %td
          - if facility_users.empty?
            = select_tag :assigned_user_id, options_for_select([['Assign to...', nil], ['Unassign', 'unassign']]), :class => 'sync_select', :id => nil
          - else
            = select_tag :assigned_user_id, options_for_select(facility_users.map{ |u| [u.full_name, u.id] }.unshift(['Assign to...', nil], ['Unassign', 'unassign'])), :class => 'sync_select', :id => nil
        %td
          %select{ :name => "order_status_id", :class => 'sync_select', :id => nil }
            = options_for_select([['Status...', nil]])
            - OrderStatus.non_protected_statuses(current_facility).each do |os|
              = options_for_select([[os.name_with_level, os.id]])
        %td
          = submit_tag "Update Reservations"
  = will_paginate(@order_details)
  = render :partial => '/price_display_footnote', :locals => { :admin => true }
  #pick_accessories_dialog
